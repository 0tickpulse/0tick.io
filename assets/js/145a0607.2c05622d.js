"use strict";(self.webpackChunk_0_tick_io=self.webpackChunk_0_tick_io||[]).push([[6592],{2343:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(1527),i=t(7463);const r={},o="Linked List",a={id:"notes/programming/DSA/Lists/Linked List/index",title:"Linked List",description:"What sucks about an array:",source:"@site/docs/notes/programming/DSA/Lists/Linked List/index.md",sourceDirName:"notes/programming/DSA/Lists/Linked List",slug:"/notes/programming/DSA/Lists/Linked List/",permalink:"/notes/programming/DSA/Lists/Linked List/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notes/programming/DSA/Lists/Linked List/index.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebarNotes",previous:{title:"Big-O Notation",permalink:"/notes/programming/DSA/Big-O Notation/"},next:{title:"Linear Search & Kata Setup",permalink:"/notes/programming/DSA/Searching/Linear Search/"}},c={},d=[];function l(e){const n={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"linked-list",children:"Linked List"}),"\n",(0,s.jsx)(n.p,{children:"What sucks about an array:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Deletion"}),"\n",(0,s.jsx)(n.li,{children:"Insertion"}),"\n",(0,s.jsx)(n.li,{children:"Not growable"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Linked lists have two types: ",(0,s.jsx)(n.strong,{children:"singly"})," and ",(0,s.jsx)(n.strong,{children:"doubly"})," linked lists."]}),"\n",(0,s.jsx)(n.p,{children:"In a linked list, fundamentally it is a type of structure where elements have a reference to the next element."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"(A) --\x3e (B) --\x3e (C) --\x3e (D) --\x3e (E)\n ^\n |\nhead\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This means that, for example, ",(0,s.jsx)(n.code,{children:"get(i)"})," would work very differently. You would have to start at the head and go through the references"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"(A)"}),"s are usually container items, meaning, given a value ",(0,s.jsx)(n.code,{children:"T"}),", it would usually be a wrapper, like ",(0,s.jsx)(n.code,{children:"Node<T>"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},7463:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var s=t(959);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);