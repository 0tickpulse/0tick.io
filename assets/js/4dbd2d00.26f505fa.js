"use strict";(self.webpackChunk_0_tick_io=self.webpackChunk_0_tick_io||[]).push([[991],{68811:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(11527),r=t(7463);const s={},i="Arrays",o={id:"notes/programming/DSA/Arrays/index",title:"Arrays",description:"They're secretly objects with the number index as properties to act like arrays.",source:"@site/docs/notes/programming/DSA/Arrays/index.md",sourceDirName:"notes/programming/DSA/Arrays",slug:"/notes/programming/DSA/Arrays/",permalink:"/notes/programming/DSA/Arrays/",draft:!1,unlisted:!1,editUrl:"https://github.com/0tickpulse/0tick.io/tree/main/docs/notes/programming/DSA/Arrays/index.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebarNotes",previous:{title:"Linear Transformations",permalink:"/notes/maths/Linear Algebra/Linear Transformations"},next:{title:"Big-O Notation",permalink:"/notes/programming/DSA/Big-O Notation/"}},d={},l=[{value:"Indexing",id:"indexing",level:2},{value:"ArrayBuffers in JavaScript",id:"arraybuffers-in-javascript",level:2},{value:"Arrays are not lists",id:"arrays-are-not-lists",level:2},{value:"Insertion",id:"insertion",level:2},{value:"Deletion",id:"deletion",level:2},{value:"Lists",id:"lists",level:2}];function c(e){const n={admonition:"admonition",code:"code",defs:"defs",g:"g",h1:"h1",h2:"h2","mjx-container":"mjx-container",p:"p",path:"path",pre:"pre",strong:"strong",style:"style",svg:"svg",use:"use",...(0,r.a)(),...e.components},t=n["mjx-container"];return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"arrays",children:"Arrays"}),"\n",(0,a.jsx)(n.admonition,{title:"JavaScript arrays aren't arrays",type:"info",children:(0,a.jsx)(n.p,{children:"They're secretly objects with the number index as properties to act like arrays."})}),"\n",(0,a.jsx)(n.p,{children:"An array is a contiguous memory space that contains a certain number of bytes."}),"\n",(0,a.jsxs)(n.p,{children:["For example, ",(0,a.jsx)(n.code,{children:"int[3]"})," means three integers in contiguous space (12 bytes)."]}),"\n",(0,a.jsx)(n.h2,{id:"indexing",children:"Indexing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"let arr = [1, 2, 3]; // int[3]\narr[0]; // 1\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In memory, this array looks like ",(0,a.jsx)(n.code,{children:"00 00 00 01 00 00 00 02 00 00 00 03"}),".\nWhen we index into an array, we're getting the address of the first element and adding the index multiplied by the size of the type to it.\nIf it was ",(0,a.jsx)(n.code,{children:"arr[2]"}),", we'd get the address of the first element and add ",(0,a.jsx)(t,{className:"MathJax",jax:"SVG",style:{fontSize:"120%"},children:(0,a.jsxs)(n.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"4.399ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -677 1944.4 677",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[(0,a.jsxs)(n.defs,{children:[(0,a.jsx)(n.path,{id:"MJX-1-TEX-N-32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}),(0,a.jsx)(n.path,{id:"MJX-1-TEX-N-2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"}),(0,a.jsx)(n.path,{id:"MJX-1-TEX-N-34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"})]}),(0,a.jsx)(n.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:(0,a.jsxs)(n.g,{"data-mml-node":"math",children:[(0,a.jsx)(n.g,{"data-mml-node":"mn",children:(0,a.jsx)(n.use,{"data-c":"32",xlinkHref:"#MJX-1-TEX-N-32"})}),(0,a.jsx)(n.g,{"data-mml-node":"mo",transform:"translate(722.2,0)",children:(0,a.jsx)(n.use,{"data-c":"2217",xlinkHref:"#MJX-1-TEX-N-2217"})}),(0,a.jsx)(n.g,{"data-mml-node":"mn",transform:"translate(1444.4,0)",children:(0,a.jsx)(n.use,{"data-c":"34",xlinkHref:"#MJX-1-TEX-N-34"})})]})})]})})," to it.\nThis has ",(0,a.jsx)(t,{className:"MathJax",jax:"SVG",style:{fontSize:"120%"},children:(0,a.jsxs)(n.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2041 1000",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[(0,a.jsxs)(n.defs,{children:[(0,a.jsx)(n.path,{id:"MJX-2-TEX-I-1D442",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}),(0,a.jsx)(n.path,{id:"MJX-2-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),(0,a.jsx)(n.path,{id:"MJX-2-TEX-N-31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}),(0,a.jsx)(n.path,{id:"MJX-2-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"})]}),(0,a.jsx)(n.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:(0,a.jsxs)(n.g,{"data-mml-node":"math",children:[(0,a.jsx)(n.g,{"data-mml-node":"mi",children:(0,a.jsx)(n.use,{"data-c":"1D442",xlinkHref:"#MJX-2-TEX-I-1D442"})}),(0,a.jsx)(n.g,{"data-mml-node":"mo",transform:"translate(763,0)",children:(0,a.jsx)(n.use,{"data-c":"28",xlinkHref:"#MJX-2-TEX-N-28"})}),(0,a.jsx)(n.g,{"data-mml-node":"mn",transform:"translate(1152,0)",children:(0,a.jsx)(n.use,{"data-c":"31",xlinkHref:"#MJX-2-TEX-N-31"})}),(0,a.jsx)(n.g,{"data-mml-node":"mo",transform:"translate(1652,0)",children:(0,a.jsx)(n.use,{"data-c":"29",xlinkHref:"#MJX-2-TEX-N-29"})})]})})]})})," time complexity."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"00 00 00 01 00 00 00 02 00 00 00 03\n^           ^           ^\n|           |           |\n|           |           +--- arr[2] (2 * 4)\n|           +--- arr[1] (1 * 4)\n+--- arr[0] (0 * 4)\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is a function that indexes an array, to demonstrate the above in code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"fn index<T: Copy>(arr: &[T], index: usize) -> T {\n    let address = arr.as_ptr() as usize;\n    let size = std::mem::size_of::<T>();\n    let offset = index * size;\n    let new_address = address + offset;\n    unsafe { *(new_address as *const T) }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is why array indexes start at 0; it's closer to how the array is stored in memory."}),"\n",(0,a.jsx)(n.h2,{id:"arraybuffers-in-javascript",children:"ArrayBuffers in JavaScript"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"> const buffer = new ArrayBuffer(12)\nundefined\n> buffer\nArrayBuffer {\n  [Uint8Contents]: <00 00 00 00 00 00 00 00 00 00 00 00>,\n  byteLength: 12\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"It's just a series of 12 bytes. If we want to interpret it as something else, we can use a typed array."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"> const v8 = new Uint8Array(buffer)\nundefined\n> v8\nUint8Array(12) [\n  0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0,\n  0, 0\n]\n> v8[0] = 42\n42\n> v8[2] = 60\n60\n> v8\nUint8Array(12) [\n  42, 0, 60, 0, 0,\n   0, 0,  0, 0, 0,\n   0, 0\n]\nArrayBuffer {\n  [Uint8Contents]: <2a 00 3c 00 00 00 00 00 00 00 00 00>,\n  byteLength: 12\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Notice how one byte was skipped because of the size of the type."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"> const v16 = new Uint16Array(buffer)\nundefined\n> view16[4] = 0x5050\n20560\n> buffer\nArrayBuffer {\n  [Uint8Contents]: <2a 00 3c 00 00 00 00 00 50 50 00 00>,\n  byteLength: 12\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This is interesting because we set position 4, yet it sets it on the 8th and 9th bytes.\nAgain, this is because of the size of the type, and how that affects the interpretation of the buffer.\nAdditionally, a concept called ",(0,a.jsx)(n.strong,{children:"endianness"}),", i.e. the order of bytes, comes into play here."]}),"\n",(0,a.jsxs)(n.p,{children:["When we used ",(0,a.jsx)(n.code,{children:"Uint8Array"}),", we interpreted it as 8-bit units, while ",(0,a.jsx)(n.code,{children:"Uint16Array"})," interprets it as 16-bit units.\nThis is what an array fundamentally is; a contiguous memory space interpreted as a certain type."]}),"\n",(0,a.jsxs)(n.p,{children:["These are called ",(0,a.jsx)(n.strong,{children:"views"})," because they're a different way of looking at the same data."]}),"\n",(0,a.jsx)(n.h2,{id:"arrays-are-not-lists",children:"Arrays are not lists"}),"\n",(0,a.jsx)(n.p,{children:"Arrays are not lists, and lists are not arrays."}),"\n",(0,a.jsx)(n.h2,{id:"insertion",children:"Insertion"}),"\n",(0,a.jsx)(n.p,{children:"With arrays, there's no magic behind the scenes.\nThere's no \"insertion,\" it just sets the value at the index.\nYou do not get to grow your array, because it can overwrite other data."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:"01 02 03 04 05 06 07 08 09 10 11 12 13 14 15\n----------------------------+ -------------+\n                            |              |\n                            |              +--- some other data\n                            +--- our array\n"})}),"\n",(0,a.jsx)(n.p,{children:"It would be problematic if we wanted to grow our array, because it's going to overlap with other data."}),"\n",(0,a.jsx)(n.p,{children:"This is why data structures exist; to abstract away the details of how data is stored, so you don't have to constantly reallocate memory and move data around."}),"\n",(0,a.jsxs)(n.p,{children:["Some languages have things like ",(0,a.jsx)(n.code,{children:"capacity"})," that optimizes the use of memory without reallocations."]}),"\n",(0,a.jsx)(n.h2,{id:"deletion",children:"Deletion"}),"\n",(0,a.jsx)(n.p,{children:'Deletion is a bit confusing; you don\'t "delete" contiguous memory.\nPrograms delete things differently, but the most common way is to mark it as "deleted" and ignore it.'}),"\n",(0,a.jsx)(n.p,{children:"For raw arrays in, for instance, C, you will have to mark it yourself."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"null"}),' also comes into play here as a named way of saying "deleted."']}),"\n",(0,a.jsx)(n.h2,{id:"lists",children:"Lists"}),"\n",(0,a.jsxs)(n.p,{children:["As previously mentioned, arrays are just contiguous memory interpreted as a certain type.\nYou can't \"insert at a certain index\" because you can't grow the array. There's no ",(0,a.jsx)(n.code,{children:"push"}),", ",(0,a.jsx)(n.code,{children:"pop"}),", etc.\nTo get around this, data structures are used, many of which actually use arrays under the hood."]}),"\n",(0,a.jsx)(n.style,{children:'\nmjx-container[jax="SVG"] {\n  direction: ltr;\n}\n\nmjx-container[jax="SVG"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax="SVG"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax="SVG"][display="true"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax="SVG"][display="true"][width="full"] {\n  display: flex;\n}\n\nmjx-container[jax="SVG"][justify="left"] {\n  text-align: left;\n}\n\nmjx-container[jax="SVG"][justify="right"] {\n  text-align: right;\n}\n\ng[data-mml-node="merror"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node="merror"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node="mtable"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node="mtable"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node="mtable"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node="mtable"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node="mtable"] > g > svg {\n  overflow: visible;\n}\n\n[jax="SVG"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax="SVG"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node="maction"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {\n  stroke-width: 3;\n}\n'})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},7463:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var a=t(50959);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);